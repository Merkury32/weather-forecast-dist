{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/daily/daily.component.ts","webpack:///src/app/daily/daily.component.html","webpack:///src/app/service/weather.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","DailyComponent","weatherService","dailyTemperature","dailyWeather","daysNumbers","days","console","log","document","documentElement","clientHeight","navigator","geolocation","getCurrentPosition","data","showWeather","coords","latitude","longitude","getCity","subscribe","currentCity","locality","getWeather","sunrise","sunset","changeBackground","currentTemperature","Math","round","temp","currentFeelsTemperature","feels_like","currentWeather","weather","description","charAt","toUpperCase","slice","i","push","day","night","date","Date","getDay","j","k","currentTime","getDate","currentUTC","floor","getTime","body","className","encapsulation","None","http","get","weatherApiKey","pipe","responseData","postsArray","key","hasOwnProperty","month","getMonth","year","getFullYear","months","dateString","providedIn","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Pogoda';\n}\n","<app-daily></app-daily>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DailyComponent } from './daily/daily.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, DailyComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { weatherService } from '../service/weather.service';\n\n@Component({\n  selector: 'app-daily',\n  templateUrl: './daily.component.html',\n  styleUrls: ['./daily.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DailyComponent implements OnInit {\n  constructor(private weatherService: weatherService) {}\n\n  currentCity: string;\n\n  currentTemperature: string;\n  currentFeelsTemperature: string;\n  currentWeather: string;\n  currentTime: string;\n\n  dailyTemperature = [];\n  dailyWeather = [];\n  daysNumbers = [];\n  days = [];\n\n  ngOnInit() {\n    console.log(document.documentElement.clientHeight);\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((data) => {\n        this.showWeather(data.coords.latitude, data.coords.longitude);\n\n        this.weatherService\n          .getCity(data.coords.latitude, data.coords.longitude)\n          .subscribe((data: any) => {\n            this.currentCity = data.locality;\n          });\n      });\n    }\n  }\n\n  showWeather(latitude: number, longitude: number) {\n    this.weatherService.getWeather(latitude, longitude).subscribe((data) => {\n      console.log(data);\n\n      let sunrise = data[4].sunrise;\n      let sunset = data[4].sunset;\n\n      this.changeBackground(sunrise, sunset);\n\n      this.currentTemperature = Math.round(data[4].temp) + ' °C';\n      this.currentFeelsTemperature = Math.round(data[4].feels_like) + ' °C';\n      this.currentWeather = data[4].weather[0].description;\n      this.currentWeather =\n        this.currentWeather.charAt(0).toUpperCase() +\n        this.currentWeather.slice(1);\n\n      for (let i = 0; i < 8; i++) {\n        this.dailyTemperature.push(\n          Math.round(data[7][i].temp.day) +\n            '° / ' +\n            (Math.round(data[7][i].temp.night) + '°')\n        );\n\n        this.dailyWeather.push(data[7][i].weather[0].id);\n\n        console.log(this.dailyWeather);\n        console.log(this.dailyTemperature);\n      }\n\n      let date = new Date().getDay();\n\n      this.days.push(\n        'Niedziela',\n        'Poniedziałek',\n        'Wtorek',\n        'Środa',\n        'Czwartek',\n        'Piątek',\n        'Sobota'\n      );\n      console.log(this.days);\n\n      for (let j = date; j <= 6; j++) {\n        this.daysNumbers.push(j);\n      }\n\n      for (let k = 0; k <= date; k++) {\n        this.daysNumbers.push(k);\n      }\n\n      console.log(this.daysNumbers);\n    });\n\n    this.currentTime = this.weatherService.getDate();\n  }\n\n  changeBackground(sunrise: number, sunset: number) {\n    let currentUTC = Math.floor(new Date().getTime() / 1000);\n\n    if (currentUTC > sunrise && currentUTC < sunset) {\n      document.body.className = 'body-day';\n    } else {\n      document.body.className = 'body-night';\n    }\n  }\n}\n","<p class=\"powered-paragraph\">Powered by OpenWeather</p>\r\n\r\n<div class=\"current-weather-div\">\r\n  <p class=\"current-location-header\">{{currentCity}}</p>\r\n  <p class=\"current-time-header\">{{currentTime}}</p>\r\n  <p class=\"current-temperature-header\">{{currentTemperature}}</p>\r\n  <p class=\"current-feelsTemperature-header\">Odczuwalne {{currentFeelsTemperature}}</p>\r\n  <p class=\"current-line-breaker\">----------</p>\r\n  <p class=\"current-weather-header\">{{currentWeather}}</p>\r\n</div>\r\n\r\n<div class=\"daily-weather-div\">\r\n  <div *ngFor=\"let element of dailyTemperature; index as i;\" [ngClass]=\"{'daily-one-day-div-last' :  i == 7, 'daily-one-day-div' : i !=9}\">\r\n    <i [ngClass]=\"['wi wi-owm-' + dailyWeather[i]]\"></i>\r\n    <!-- <p>{{days[7]}}</p> -->\r\n    <p>{{element}}</p>\r\n    <p *ngIf='i == 0'>Dzisiaj</p>\r\n    <p *ngIf='i != 0'>{{days[daysNumbers[i]]}}</p>\r\n  </div>\r\n</div>\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class weatherService {\n  constructor(private http: HttpClient) {}\n\n  getWeather(latitude: number, longitude: number) {\n    return this.http\n      .get(\n        //52.0887\n        //17.01506\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units=metric&lang=pl&appid=${environment.weatherApiKey}`\n      )\n      .pipe(\n        map((responseData) => {\n          const postsArray = [];\n          for (const key in responseData) {\n            if (responseData.hasOwnProperty(key)) {\n              postsArray.push({ ...responseData[key], id: key });\n            }\n          }\n          return postsArray;\n        })\n      );\n  }\n\n  getDate() {\n    var date = new Date();\n\n    let day = date.getDate();\n    let month = date.getMonth();\n    let year = date.getFullYear();\n\n    let months = [\n      'Stycznia',\n      'Lutego',\n      'Marca',\n      'Kwietnia',\n      'Maja',\n      'Czerwca',\n      'Lipca',\n      'Sierpnia',\n      'Września',\n      'Października',\n      'Listopada',\n      'Grudnia',\n    ];\n\n    let dateString = `${day} ${months[month]} ${year}`;\n\n    return dateString;\n  }\n\n  getCity(latitude: number, longitude: number) {\n    return this.http.get(\n      `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=pl`\n    );\n  }\n}\n","export const environment = {\n  production: false,\n  weatherApiKey: 'bc1f103d0825160fc4ecba0adc35009a',\n};\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}